filter {
  if [type] == "flow" {

# Tag with basic SOURCE organization and location information from MaxMind
# Note that the organization this gives is the owner and location of the ASN, not the IP specificially.
    geoip {
        database => "/var/cache/netsage/GeoLite2-ASN.mmdb"
        default_database_type => "ASN"
        cache_size => 1000
        source => "[meta][src_ip]"
        target => "[meta][src_geoip]"
        fields => [ "autonomous_system_number", "autonomous_system_organization" ]
    }
    geoip {
        database => "/var/cache/netsage/GeoLite2-City.mmdb"
        default_database_type => "City"
        cache_size => 1000
        source => "[meta][src_ip]"
        target => "[meta][src_geoip]"
        fields => [ "continent_code", "continent_name", "country_code2", "country_name", "city_name", "location", "latitude", "longitude", "organization" ]
    }
    mutate {
        rename => {
            "[meta][src_geoip][continent_code]" => "[meta][src_continent_code]"
            "[meta][src_geoip][continent_name]" => "[meta][src_continent]"
            "[meta][src_geoip][country_code2]"  => "[meta][src_country_code]"
            "[meta][src_geoip][country_name]"   => "[meta][src_country_name]"
            "[meta][src_geoip][city_name]"      => "[meta][src_city]"
            "[meta][src_geoip][latitude]"       => "[meta][src_latitude]"
            "[meta][src_geoip][longitude]"      => "[meta][src_longitude]"
            "[meta][src_geoip][location]"       => "[meta][src_location]"
            "[meta][src_geoip][asn]"            => "[meta][src_asn]"
            "[meta][src_geoip][as_org]"         => "[meta][src_organization]"
        }
        remove_field =>  "[meta][src_geoip]"
    }

# Tag with basic DESTINATION organization and location information from MaxMind
    geoip {
        database => "/var/cache/netsage/GeoLite2-ASN_20190108/GeoLite2-ASN.mmdb"
        default_database_type => "ASN"
        cache_size => 1000
        source => "[meta][dst_ip]"
        target => "[meta][dst_geoip]"
        fields => [ "autonomous_system_number", "autonomous_system_organization" ]
    }
    geoip {
        database => "/var/cache/netsage/GeoLite2-City_20190108/GeoLite2-City.mmdb"
        default_database_type => "City"
        cache_size => 1000
        source => "[meta][dst_ip]"
        target => "[meta][dst_geoip]"
        fields => [ "continent_code", "continent_name", "country_code2", "country_name", "city_name", "location", "latitude", "longitude", "organization" ]
    }
    mutate {
        rename => {
            "[meta][dst_geoip][continent_code]" => "[meta][dst_continent_code]"
            "[meta][dst_geoip][continent_name]" => "[meta][dst_continent]"
            "[meta][dst_geoip][country_code2]"  => "[meta][dst_country_code]"
            "[meta][dst_geoip][country_name]"   => "[meta][dst_country_name]"
            "[meta][dst_geoip][city_name]"      => "[meta][dst_city]"
            "[meta][dst_geoip][latitude]"       => "[meta][dst_latitude]"
            "[meta][dst_geoip][longitude]"      => "[meta][dst_longitude]"
            "[meta][dst_geoip][location]"       => "[meta][dst_location]"
            "[meta][dst_geoip][asn]"            => "[meta][dst_asn]"
            "[meta][dst_geoip][as_org]"         => "[meta][dst_organization]"
        }
        remove_field =>  "[meta][dst_geoip]"
    }

  }
}
