filter {
  if [type] == "flow" {

# Add an id which can be used to identify future flows of the same kind - a hash of orig. ip's, etc.
    fingerprint {
        source => [ '[meta][src_ip]', '[meta][dst_ip]', '[meta][src_port]', '[meta][dst_port]', '[meta][protocol]']
        concatenate_sources => true
        method => "SHA256"
        key => "create flowid"
        target => "[meta][id]"
    }

# Anonymize IP addresses
    # Use grok to confirm validity of source and destination IP addresses.
        # eg, in [meta][*_ip] => find IPV4 pattern : if found, put the result in field *_ipv4.
        # (@metadata fields are not included in event output, so don't have to delete them)
    # For IPV4 addresses,
        # Get the first 3 octets of the IP and save to field *_ip_clipped
        # Update the orig *_ip, adding .x to the end of the clipped version
        # then remove the clipped field  (when matching like this, you can't save to a nested field, so need this)
    # For IPV6 addresses,
        # In anonymize_ipv6.rb script, expand to full format with 8 hextets, then replace the last 4 with x:x:x:x.

# source ip's
    grok {
        match => { "[meta][src_ip]" => "^%{IPV4:[@metadata][src_ipv4]}$" }
        match => { "[meta][src_ip]" => "^%{IPV6:[@metadata][src_ipv6]}$" }
    }

    if [@metadata][src_ipv4] {
        grok {
            match => { "[meta][src_ip]" => "(?<src_ip_clipped>(\d{1,3}\.){3})\d{1,3}" }
        }
        mutate {
            update => { "[meta][src_ip]" => "%{src_ip_clipped}x" }
            remove_field => [ "src_ip_clipped", "[@metadata][src_ipv4]" ]
        }
    } else if [@metadata][src_ipv6] {
        ruby {
            path => "/etc/logstash/conf.d/ruby/anonymize_ipv6.rb"            ###### SET CORRECTLY ######
            script_params => { "ip_field" => "[meta][src_ip]" }
        }
    } else {
        mutate {
            rename => { "[meta][src_ip]" => "[@metadata][src_ip]" }
            add_field => { "[meta][src_ip]" => "INVALID IP" }
        }
    }

# destination ip's
    grok {
        match => { "[meta][dst_ip]" => "^%{IPV4:[@metadata][dst_ipv4]}$" }
        match => { "[meta][dst_ip]" => "^%{IPV6:[@metadata][dst_ipv6]}$" }
    }

    if [@metadata][dst_ipv4] {
        grok {
            #add_field => { "[@metadata][dst_ip]" => ["[meta][dst_ip]" }  # for debugging
            match => { "[meta][dst_ip]" => "(?<dst_ip_clipped>(\d{1,3}\.){3})\d{1,3}" }
        }
        mutate {
            update => { "[meta][dst_ip]" => "%{dst_ip_clipped}x" }
            remove_field => [ "dst_ip_clipped" ]
        }
    } else if [@metadata][dst_ipv6] {
        ruby {
            path => "/etc/logstash/conf.d/ruby/anonymize_ipv6.rb"      ###### SET CORRECTLY ######
            script_params => { "ip_field" => "[meta][dst_ip]" }
        }
    } else {
        mutate {
            rename => { "[meta][dst_ip]" => "[@metadata][dst_ip]" }
            add_field => { "[meta][dst_ip]" => "INVALID IP" }
        }
    }

  }
}
